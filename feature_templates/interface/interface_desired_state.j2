{# ####### CMD: Set command variables on a per-os_type basis ####### #}
{% if 'ios' in os_type |string %}
{% set intf_cmd = "show interfaces status" %}
{% set switchport_cmd = "show interfaces switchport" %}
{% set ip_brief_cmd = "show ip interface brief" %}
{% elif 'nxos' in os_type |string %}
{% set intf_cmd = "show interface status" %}
{% set switchport_cmd = "show interface switchport" %}
{% set ip_brief_cmd = "show ip  interface brief vrf all | json" %}
{% elif 'asa' in os_type |string %}
{% set intf_cmd = "show interface" %}
{% set ip_brief_cmd = "show interface ip brief" %}
{% elif 'wlc' in os_type |string %}
{% set intf_cmd = "show port summary" %}
{% set ip_brief_cmd = "show interface summary" %}
{% endif %}


{# ##### VAL_CMDS: Build a dictionary of commands used for creating the validation file ##### #}
{% if sub_features.__class__.__name__ == 'list' %}
- {{ feature }}:
{% for sub_feat in sub_features %}
{% if sub_feat == 'intf' and intf_cmd is defined %}
    intf: 
      {{ intf_cmd }}: VALIDATE
{% elif sub_feat == 'switchport' and switchport_cmd is defined %}
    switchport: 
      {{ switchport_cmd }}: VALIDATE
{% elif sub_feat == 'ip_brief' and ip_brief_cmd is defined %}
    ip_brief: 
      {{ ip_brief_cmd }}: VALIDATE
{# ##### End statements: for sub_feature and sub_feature conditional  ##### #}
{% endif %}{% endfor %}


{# ##### DESIRED_STATE: Build desired state of the feature and each sub-feature ##### #}
{% else %}
- {{ feature }}:
{% for sub_feat, input_vars in sub_features.items() %}
{# ### INTF: {cmd: {intf: {duplex: x, speed: x, type:x, connected }} ### #}
{% if sub_feat == 'intf' %}
    intf: 
      {{ intf_cmd }}: 
{% for each_intf, intf_info in input_vars.items() %}
        {{ each_intf }}:
          duplex: {{ intf_info.duplex | default('') }}
          speed: {{ intf_info.speed | default('') }}
          type: {{ intf_info.type | default('') }}
          status: connected
{% endfor %}
{# ### SWITCHPORT: {cmd: {intf: {mode: access or trunk, vlan: x or [x,y]}} ### #}
{% elif sub_feat == 'switchport' %}
    switchport: 
      {{ switchport_cmd }}: 
{% for each_intf, intf_info in input_vars.items() %}
        {{ each_intf }}: 
          mode: {{ intf_info.mode }}
{% if intf_info.vlan.__class__.__name__ != 'list' %}
          vlan: {{ intf_info.vlan }}
{% elif intf_info.vlan.__class__.__name__ == 'list' %}
          vlan: 
            _mode: strict
            list: {{ intf_info.vlan }}
{% endif %}{% endfor %}
{# ### IP_BRIEF: {cmd: {intf: {ip:x, status: x}}} ### #}
{% elif sub_feat == 'ip_brief' %}
    ip_brief: 
      {{ ip_brief_cmd }}: 
{% for each_intf, each_ip in input_vars.items() %}
        {{ each_intf }}:
          ip: {{ each_ip }}
          status: up
{% endfor %}
{# ##### End statements: for sub_feature and sub_feature conditional  ##### #}
{% endif %}{% endfor %}
{% endif %}